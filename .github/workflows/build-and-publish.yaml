name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Poetry
        run: pipx install poetry

      - name: Set version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: poetry version "${GITHUB_REF_NAME#v}"

      - name: Build distributions
        run: poetry build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-test-pypi:
    environment:
      name: testpypi
      url: https://pypi.org/project/epoch8-smartfeed/
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    environment:
      name: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    needs:
      - build
      - publish-to-test-pypi
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
